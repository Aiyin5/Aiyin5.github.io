import{_ as e,V as t,W as p,X as n,Y as s,$ as c,a0 as l,D as i}from"./framework-b9ac5585.js";const o={},u=n("h1",{id:"关于freebe的项目的cicd方案",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#关于freebe的项目的cicd方案","aria-hidden":"true"},"#"),s(" 关于FreeBe的项目的CICD方案")],-1),r=n("p",null,"为了方便开发、测试和运维，这边建议采用两套服务器搭建开发环境和测试环境，采用GitHub作为代码托管，SonarCloud进行代码质量控制，DockerHub作为镜像托管，Git Action作为流水线控制，腾讯云作为服务器。 具体的流程如下面的流程图",-1),d=n("iframe",{id:"embed_dom",name:"embed_dom",frameborder:"0",style:{display:"block","margin-left":"10px","margin-top":"10px",width:"100%",height:"400px"},src:"https://www.processon.com/embed/63bff214261f1c5cc7947101"},null,-1),k=l(`<h2 id="自动化部署流程" tabindex="-1"><a class="header-anchor" href="#自动化部署流程" aria-hidden="true">#</a> 自动化部署流程</h2><h3 id="开发环境的自动化部署" tabindex="-1"><a class="header-anchor" href="#开发环境的自动化部署" aria-hidden="true">#</a> 开发环境的自动化部署</h3><ul><li>开发人员进行本地开发，将代码push到GitHub的dev分支</li><li>GitAction监听到push后执行自动化部署脚本</li><li>编译代码并导出目标文件</li><li>git Action登录dockerHub进行docker镜像构建</li><li>git Action登录腾讯云服务器进行docker镜像拉取及部署</li></ul><h3 id="测试环境的自动化部署" tabindex="-1"><a class="header-anchor" href="#测试环境的自动化部署" aria-hidden="true">#</a> 测试环境的自动化部署</h3><p>和开发环境基本一致，只有dev分支合并到Master分支时进行自动化部署。</p><h2 id="测试流程" tabindex="-1"><a class="header-anchor" href="#测试流程" aria-hidden="true">#</a> 测试流程</h2><p>待定</p><h2 id="自动化qa" tabindex="-1"><a class="header-anchor" href="#自动化qa" aria-hidden="true">#</a> 自动化QA</h2><p>待定</p><h2 id="具体实现相关内容" tabindex="-1"><a class="header-anchor" href="#具体实现相关内容" aria-hidden="true">#</a> 具体实现相关内容</h2><p>以freebe的前端代码自动化部署为例。 在项目目录.github/workflows下添加git action流程文件ci.yaml 其中DOCKER_USERNAME、DOCKER_PASSWORD可以在github项目的setting下Secrets创建对应的密钥。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> GitHub Actions Build and Deploy Demo
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">push</span><span class="token punctuation">:</span>
    <span class="token key atrule">branches</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> dev
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build-and-deploy</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">persist-credentials</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install and Build   //打包
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          yarn install
          yarn export</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Log in to Docker Hub  //登录dockerHub
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/login<span class="token punctuation">-</span>action@f054a8b539a109f9f41c372932f1ae047eff08c9
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span>        //dockerHub的用户名
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>        //dockerHub的密码

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Extract metadata (tags<span class="token punctuation">,</span> labels) for Docker
        <span class="token key atrule">id</span><span class="token punctuation">:</span> meta
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/metadata<span class="token punctuation">-</span>action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">images</span><span class="token punctuation">:</span> xxx/freebe                          //dockerHub中的仓库名称

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build and push Docker image           //创建docker镜像
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> docker/build<span class="token punctuation">-</span>push<span class="token punctuation">-</span>action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">context</span><span class="token punctuation">:</span> .
          <span class="token key atrule">push</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">tags</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.meta.outputs.tags <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">labels</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.meta.outputs.labels <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ssh docker login                   //登录腾讯云及部署镜像
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> appleboy/ssh<span class="token punctuation">-</span>action@master
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">host</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.TENCENT_CLOUD_IP <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">username</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.TENCENT_CLOUD_NAME <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">password</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.TENCENT_CLOUD_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">script</span><span class="token punctuation">:</span> cd ~ <span class="token important">&amp;&amp;</span> sh deploy.sh $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_USERNAME <span class="token punctuation">}</span><span class="token punctuation">}</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.DOCKER_PASSWORD <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的部署镜像脚本depoy.sh需要放置在腾讯云中，参考内容如下： 其中xxx/freebe 为对应的dockerHub仓库镜像</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------docker Login--------&quot;</span>
<span class="token function">docker</span> login <span class="token parameter variable">--username</span><span class="token operator">=</span><span class="token variable">$1</span>  <span class="token parameter variable">--password</span><span class="token operator">=</span><span class="token variable">$2</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------docker Stop--------&quot;</span>
<span class="token function">docker</span> stop freebe
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------docker Rm--------&quot;</span>
<span class="token function">docker</span> <span class="token function">rm</span> freebe
<span class="token function">docker</span> rmi xxx/freebe:dev
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------docker Pull--------&quot;</span>
<span class="token function">docker</span> pull xxx/freebe:dev
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------docker Create and Start--------&quot;</span>
<span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">80</span>:80 <span class="token parameter variable">--name</span> freebe xxx/freebe:dev    
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;---------deploy Success--------&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目的根目录下需要添加DockerFile，参考内容如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>FROM nginx
COPY ./out /usr/share/nginx/html
EXPOSE <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),v={href:"https://github.com/Aiyin5/freebe-web-test",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"自动化部署案例",-1);function m(h,f){const a=i("ExternalLinkIcon");return t(),p("div",null,[u,r,d,k,n("p",null,[s("一个自动化部署的案例请参考:"),n("a",v,[b,c(a)])])])}const g=e(o,[["render",m],["__file","FreeBe_CICD.html.vue"]]);export{g as default};
